package mac.servicios;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import mac.entidades.ConectarBaseMAC;
import mac.entidades.LiquidacionesTienda;

@Stateless
public class ServicioVerLiquidaciones {
	@PersistenceContext
	private EntityManager em;

	public String consultaCodUser(String correoDom) {
		String codUser = "";
		Connection conn;
		ResultSet res = null;
		try {
			conn = ConectarBaseMAC.getOracleConnection();
			String sql = "select cod_usuario from usuario_tbl where correo_dominio like '%" + correoDom + "%'";
			System.out.println("*****query: " + sql);
			PreparedStatement cs = conn.prepareStatement(sql);
			res = cs.executeQuery();
			while (res.next()) {
				codUser = res.getString(1);
			}
			res.close();
			cs.close();
			conn.close();
		} catch (Exception e) {
			System.out.println("error " + e.getMessage());
		}
		return codUser;
	}

	public List<LiquidacionesTienda> recuperaNumLiqui(String codUser) {
		Connection conn;
		ResultSet res = null;
		List<LiquidacionesTienda> lstNumLiqui = new ArrayList<LiquidacionesTienda>();
		try {
			conn = ConectarBaseMAC.getOracleConnection();
			String sql = "select  min(cd_liquidacion), num_liquidacion, min(codigo_sap_generico), min(cod_modelo), min(tienda_origen), min(tienda_destino),"
					+ " min(cantidad), to_date(fecha_proceso), min(cod_usuario) from liquidaciones_tbl where num_liquidacion is not null"
					+ " and tienda_origen=(select min(tienda_origen) from liquidaciones_tbl) and cod_usuario='"
					+ codUser + "' group by num_liquidacion, fecha_proceso order by num_liquidacion desc ";
			System.out.println("*-- Query: " + sql);
			PreparedStatement cs = conn.prepareStatement(sql);
			res = cs.executeQuery();
			while (res.next()) {
				LiquidacionesTienda objNumLiqui = new LiquidacionesTienda();
				objNumLiqui.setCd_liquidacion(res.getInt(1));
				objNumLiqui.setNum_liquidacion(res.getInt(2));
				objNumLiqui.setCodigo_sap_generico(res.getString(3));
				objNumLiqui.setCod_modelo(res.getString(4));
				objNumLiqui.setTienda_origen(res.getString(5));
				objNumLiqui.setTienda_destino(res.getString(6));
				objNumLiqui.setCantidad(res.getInt(7));
				objNumLiqui.setFecha_proceso(res.getDate(8));
				objNumLiqui.setCod_usuario(res.getString(9));

				lstNumLiqui.add(objNumLiqui);
			}
			res.close();
			cs.close();
			conn.close();
		} catch (Exception e) {
			System.out.println("error " + e.getMessage());
		}
		return lstNumLiqui;
	}

	@SuppressWarnings("unchecked")
	public List<LiquidacionesTienda> recuperaLiquidaciones(String codUser, Integer numLiqui) {
		String sql = "select * from liquidaciones_tbl where ESTADO='S' and cod_usuario = '" + codUser + "' and num_liquidacion="
				+ numLiqui;
		System.out.println("*----Query: " + sql);
		Query q = em.createNativeQuery(sql, LiquidacionesTienda.class);
		return q.getResultList();
	}
}
